Problem Name: 83_Capacitated_Warehouse_Location

Mathematical Formulation:
\begin{align*}
\textbf{Indices and Sets:}\\[1mm]
& i \in I = \{1, 2, \dots, 10\} \quad \text{(potential warehouse locations)},\\[1mm]
& j \in J = \{1, 2, \dots, 20\} \quad \text{(customers)}.\\[2mm]
\textbf{Parameters:}\\[1mm]
& d_j \quad \text{Demand of customer } j,\quad \forall j \in J,\\[1mm]
& c_{ij} \quad \text{Service allocation cost of serving customer } j \text{ from warehouse } i,\quad \forall i \in I,\; \forall j \in J,\\[1mm]
& C_i \quad \text{Capacity of warehouse } i,\quad \forall i \in I,\\[1mm]
& L_i \quad \text{Minimum demand to be served by warehouse } i \text{ if opened},\quad \forall i \in I,\\[1mm]
& f_i \quad \text{Fixed operating cost of warehouse } i,\quad \forall i \in I,\\[1mm]
& k_{\min} \quad \text{Minimum number of warehouses to be operational (opened)},\\[1mm]
& k_{\max} \quad \text{Maximum number of warehouses to be operational (opened)}.\\[2mm]
\textbf{Decision Variables:}\\[1mm]
& x_{ij} \ge 0 \quad \text{Amount of customer } j \text{'s demand satisfied by warehouse } i,\quad \forall i \in I,\; \forall j \in J,\\[1mm]
& y_i \in \{0,1\} \quad \text{Binary variable that equals } 1 \text{ if warehouse } i \text{ is opened, } 0 \text{ otherwise},\quad \forall i \in I.\\[2mm]
\textbf{Mathematical Model:}\\[1mm]
\min \quad & \sum_{i \in I} \sum_{j \in J} c_{ij}\, x_{ij} \;+\; \sum_{i \in I} f_i\, y_i \\[1mm]
\text{s.t.} \quad 
& \sum_{i \in I} x_{ij} = d_j, \quad \forall j \in J, \quad \text{(Each customer's demand must be fully met)} \\[1mm]
& \sum_{j \in J} x_{ij} \le C_i\, y_i, \quad \forall i \in I, \quad \text{(Flow from a warehouse does not exceed its capacity, and is zero if closed)} \\[1mm]
& \sum_{j \in J} x_{ij} \ge L_i\, y_i, \quad \forall i \in I, \quad \text{(If warehouse } i \text{ is opened, it must serve at least } L_i \text{ demand)} \\[1mm]
& \sum_{i \in I} y_i \ge k_{\min}, \quad \text{(At least } k_{\min} \text{ warehouses must be open)} \\[1mm]
& \sum_{i \in I} y_i \le k_{\max}, \quad \text{(At most } k_{\max} \text{ warehouses can be open)} \\[1mm]
& x_{ij} \ge 0, \quad \forall i \in I,\; \forall j \in J, \\[1mm]
& y_i \in \{0,1\}, \quad \forall i \in I.
\end{align*}  

In this formulation, the objective function minimizes the sum of the service allocation costs and the fixed operating costs for the warehouses that are opened. The constraints ensure that every customer's demand is met exactly, that each warehouse does not exceed its capacity (and if it is not opened, no flow is allowed), and that open warehouses serve at least a minimum amount of demand. Additionally, limits are imposed on the total number of warehouses that can be operational. This complete model accurately represents the described Transportation and Logistics problem.

Execution Results:
SUCCESS:
Solution:
Total cost = 88241.0
Warehouse 2 is open; served demand = 379.0
  Customer 1 demand served: 86.00000000000001
  Customer 2 demand served: 69.0
  Customer 4 demand served: 110.0
  Customer 12 demand served: 114.00000000000001
Warehouse 4 is open; served demand = 406.0
  Customer 6 demand served: 136.00000000000003
  Customer 8 demand served: 126.0
  Customer 16 demand served: 144.0
Warehouse 6 is open; served demand = 468.0
  Customer 9 demand served: 79.0
  Customer 10 demand served: 54.0
  Customer 11 demand served: 86.0
  Customer 13 demand served: 76.0
  Customer 18 demand served: 53.0
  Customer 19 demand served: 120.0
Warehouse 8 is open; served demand = 644.0
  Customer 0 demand served: 117.00000000000001
  Customer 3 demand served: 53.0
  Customer 5 demand served: 74.0
  Customer 7 demand served: 140.0
  Customer 14 demand served: 136.00000000000003
  Customer 15 demand served: 73.0
  Customer 17 demand served: 51.00000000000001


Expected Output:
Expected solution

: {'WarehouseOpen': [0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 'CustomerAssignment': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], '_objective': 88241}
