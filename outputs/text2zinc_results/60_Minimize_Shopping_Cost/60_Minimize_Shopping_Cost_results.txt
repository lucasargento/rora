Problem Name: 60_Minimize_Shopping_Cost

Mathematical Formulation:
\begin{align*}
\textbf{Indices:} \quad & p \in \{1,2,\ldots, P\}, \quad s \in \{1,2,\ldots, S\}, \quad \text{with } P = \texttt{num\_parts}, \; S = \texttt{num\_stores}. \\[1mm]

\textbf{Parameters:} \quad & c_s \coloneqq \texttt{store\_delivery\_costs}[s] \quad \forall s \in S, \\
& p_{ps} \coloneqq \texttt{product\_stores}[p,s] \quad \forall p \in \{1,\dots,P\}, \; s \in \{1,\dots,S\}. \\[1mm]

\textbf{Decision Variables:} \quad & x_{ps} \in \{0,1\} \quad \forall p \in \{1,\dots,P\}, \; s \in \{1,\dots,S\}, \\
& \quad\text{where } x_{ps} = \begin{cases} 1, & \text{if part } p \text{ is bought from store } s, \\[0.5mm] 0, & \text{otherwise.} \end{cases} \\[1mm]
& y_s \in \{0,1\} \quad \forall s \in \{1,\dots,S\}, \\
& \quad\text{where } y_s = \begin{cases} 1, & \text{if at least one part is purchased from store } s, \\[0.5mm] 0, & \text{otherwise.} \end{cases} \\[1mm]

\textbf{Objective Function:} \quad & \text{Minimize } Z, \text{ where} \\
& Z = \sum_{s=1}^{S} c_s\, y_s + \sum_{p=1}^{P} \sum_{s=1}^{S} p_{ps}\, x_{ps}. \\[1mm]

\textbf{Constraints:} \\[1mm]
1.\quad & \text{Each part must be purchased from exactly one store:} \\
& \sum_{s=1}^{S} x_{ps} = 1 \quad \forall\, p = 1,\dots,P. \\[1mm]
2.\quad & \text{Linking store usage with part purchases:} \\
& x_{ps} \leq y_s \quad \forall\, p = 1,\dots,P, \; \forall\, s = 1,\dots,S. \\[1mm]
3.\quad & \text{Non-availability conditions: If a part is not available at a store,} \\
& \quad \text{then it cannot be purchased there. That is, } \\
& \text{if } p_{ps} = 0 \text{ then } x_{ps} = 0, \quad \forall\, p = 1,\dots,P, \; \forall\, s = 1,\dots,S. 
\end{align*}

\noindent This model is a Binary Integer Programming formulation where the objective is to minimize the total cost comprising both the purchase costs of the parts and the fixed delivery costs incurred whenever one or more parts are ordered from a store. The constraints ensure that each part is purchased exactly once, that the delivery cost for a store is only applied if at least one part is bought there, and that parts are only purchased from stores where they are available (i.e., where the price is nonzero).

Execution Results:
SUCCESS:
Solution:
Total cost = 35.01
Part 1 is purchased from Store 2 at price 2.25
Part 2 is purchased from Store 2 at price 3.0
Part 3 is purchased from Store 1 at price 2.0


Expected Output:
Expected solution

: {'x': [2, 2, 1], 'part_cost': 7.25, 'delivery_cost': 27.76, '_objective': 35.01000000000001}
