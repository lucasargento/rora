Problem Name: 36_Programmer_Job_Assignment

Mathematical Formulation:
\[
\begin{array}{rcl}
\textbf{Indices:} & i \in \{1,2,3,4,5\} & \quad \text{(Programmers)} \\
                 & j \in \{1,2,3,4,5\} & \quad \text{(Jobs)}
\end{array}
\]

\[
\begin{align*}
\textbf{Decision Variables:} \quad & x_{ij} =
\begin{cases}
1, & \text{if programmer } i \text{ is assigned to job } j,\\[1mm]
0, & \text{otherwise;}
\end{cases} \quad \text{for all } i=1,\ldots,5, \; j=1,\ldots,5.
\end{align*}
\]

\[
\begin{align*}
\textbf{Parameters:} \quad & \text{Let } cost_{ij} \text{ be the preference (cost) of programmer } i \text{ for job } j, \\
                           & \text{with the following given cost matrix:} \\
                           & \quad cost = \begin{bmatrix}
                           4 & 1 & 3 & 5 & 2 \\
                           2 & 1 & 3 & 4 & 5 \\
                           3 & 2 & 4 & 1 & 5 \\
                           2 & 3 & 4 & 5 & 1 \\
                           4 & 2 & 3 & 1 & 5 \\
                           \end{bmatrix}.
\end{align*}
\]

\[
\begin{align*}
\textbf{Objective Function:} \quad & \min \quad Z = \sum_{i=1}^{5} \sum_{j=1}^{5} cost_{ij} \, x_{ij}.
\end{align*}
\]

\[
\begin{align*}
\textbf{Constraints:} & \\[1mm]
\text{(1) Each Programmer is assigned exactly one job:} \quad & \sum_{j=1}^{5} x_{ij} = 1, \quad \forall\, i = 1,\ldots,5. \\[1mm]
\text{(2) Each Job is assigned to exactly one programmer:} \quad & \sum_{i=1}^{5} x_{ij} = 1, \quad \forall\, j = 1,\ldots,5. \\[1mm]
\text{(3) Binary Decision Variables:} \quad & x_{ij} \in \{0,1\}, \quad \forall\, i = 1,\ldots,5, \; j = 1,\ldots,5.
\end{align*}
\]

This complete formulation accurately models the assignment (scheduling) problem, ensuring that every programmer is allocated exactly one job and each job is filled by exactly one programmer, while minimizing the total sum of preference costs.

Execution Results:
SUCCESS:
Objective value: 8.0
Assignment:
Programmer 1 assigned to Job 2 with cost 1
Programmer 2 assigned to Job 1 with cost 2
Programmer 3 assigned to Job 4 with cost 1
Programmer 4 assigned to Job 5 with cost 1
Programmer 5 assigned to Job 3 with cost 3


Expected Output:
Expected solution

: {'x': [[0, 1, 0, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 1], [0, 0, 1, 0, 0]], 'jobs': [2, 1, 4, 5, 3], 'summax': 8, '_objective': 8}
