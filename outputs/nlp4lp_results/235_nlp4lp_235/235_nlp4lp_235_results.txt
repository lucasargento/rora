Problem Name: 235_nlp4lp_235

# Problem Description:
'''Problem description: A woman on a diet needs to eat two types of meal preps, a smoothie and a protein bar. Each smoothie contains 2 units of protein and 300 calories. Each protein bar contains 7 units of protein and 250 calories. The woman must eat 2 times more protein bars than smoothies. If the woman can consume at most 2000 calories, how many of each should she eat or drink to maximize her protein intake?

Expected Output Schema:
{
  "variables": {
    "NumberSmoothies": "float",
    "NumberProteinBars": "float"
  },
  "objective": "float"
}'''

Mathematical Formulation:
Sets:
- M: set of meal prep types = {Smoothie, ProteinBar}

Parameters:
- protein_Smoothie: protein content per smoothie (2 protein units per smoothie)
- protein_ProteinBar: protein content per protein bar (7 protein units per bar)
- calories_Smoothie: calories per smoothie (300 calories per smoothie)
- calories_ProteinBar: calories per protein bar (250 calories per bar)
- calorie_limit: maximum calories allowed per day (2000 calories)
- bar_to_smoothie_ratio: ratio of protein bars to smoothies (2 bars per smoothie)

Variables:
- NumberSmoothies: number of smoothies consumed [continuous, non-negative; units: count]
- NumberProteinBars: number of protein bars consumed [continuous, non-negative; units: count]

Objective:
- Maximize total protein intake = protein_Smoothie * NumberSmoothies + protein_ProteinBar * NumberProteinBars

Constraints:
1. Calorie constraint:
   calories_Smoothie * NumberSmoothies + calories_ProteinBar * NumberProteinBars <= calorie_limit
   (i.e., 300 * NumberSmoothies + 250 * NumberProteinBars <= 2000)
2. Bar-to-smoothie ratio constraint:
   NumberProteinBars = bar_to_smoothie_ratio * NumberSmoothies
   (i.e., NumberProteinBars = 2 * NumberSmoothies)

----------------------------------
Expected Output Schema Example:

{
  "variables": {
    "NumberSmoothies": "float",
    "NumberProteinBars": "float"
  },
  "objective": "float"
}

Execution Results:
SUCCESS:
Results using Google OR-Tools Linear Solver:
{'variables': {'NumberSmoothies': 2.500000000000001, 'NumberProteinBars': 4.999999999999999}, 'objective': 39.99999999999999}

Results using Google OR-Tools CP-SAT Model:
{'variables': {'NumberSmoothies': 2, 'NumberProteinBars': 4}, 'objective': 32.0}


Expected Output:
Expected solution

: {'variables': {'NumberSmoothies': 2.0, 'NumberProteinBars': 4.0}, 'objective': 32.0}
