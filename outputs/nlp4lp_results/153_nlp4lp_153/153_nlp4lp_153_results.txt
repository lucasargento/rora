Problem Name: 153_nlp4lp_153

# Problem Description:
'''Problem description: A corn farmer sends his corn to the city by either tractor or car.  A tractor can carry 40 kg of corn while a car can carry 20 kg of corn. Since tractors are very slow, the number of cars used has to be at least twice the number of tractors used. If at least 500 kg of corn need to be sent to the city, minimize the total number of tractors and cars needed.

Expected Output Schema:
{
  "variables": {
    "NumberOfCarsUsed": "float",
    "NumberOfTractorsUsed": "float",
    "CornTractor": "float",
    "CornCar": "float"
  },
  "objective": "float"
}'''

Mathematical Formulation:
Below is one precise formulation of the problem using the five-element structure.

--------------------------------------------------------------------
Sets:
- Vehicles = {tractor, car}  
  (Although the vehicles are described individually, the set is provided for clarity. Each vehicle type has a fixed capacity.)

--------------------------------------------------------------------
Parameters:
- capacity_tractor = 40 (kg per tractor)  
- capacity_car = 20 (kg per car)  
- minimum_corn = 500 (kg required to be transported)  
- car_to_tractor_ratio = 2  
  (This means the number of cars must be at least twice the number of tractors.)

--------------------------------------------------------------------
Variables:
- NumberOfTractorsUsed, an integer ≥ 0  
  (Represents the number of tractors used for transporting corn.)
- NumberOfCarsUsed, an integer ≥ 0  
  (Represents the number of cars used for transporting corn.)
- CornTractor, a float ≥ 0  
  (Amount of corn transported by tractors in kg; defined as CornTractor = capacity_tractor * NumberOfTractorsUsed.)
- CornCar, a float ≥ 0  
  (Amount of corn transported by cars in kg; defined as CornCar = capacity_car * NumberOfCarsUsed.)

--------------------------------------------------------------------
Objective:
- Minimize total vehicles = NumberOfTractorsUsed + NumberOfCarsUsed  
  (The goal is to minimize the total count of vehicles used.)

--------------------------------------------------------------------
Constraints:
1. Total corn transported meets the minimum requirement:  
   CornTractor + CornCar ≥ minimum_corn  
   (In expanded form: 40 * NumberOfTractorsUsed + 20 * NumberOfCarsUsed ≥ 500)

2. Vehicle mix constraint (cars are used at least twice as much as tractors):  
   NumberOfCarsUsed ≥ car_to_tractor_ratio * NumberOfTractorsUsed  
   (In expanded form: NumberOfCarsUsed ≥ 2 * NumberOfTractorsUsed)

3. Definitions of corn transported by each vehicle type:  
   CornTractor = capacity_tractor * NumberOfTractorsUsed  
   CornCar = capacity_car * NumberOfCarsUsed

--------------------------------------------------------------------
The final JSON output following the Expected Output Schema is:

{
  "variables": {
    "NumberOfCarsUsed": "integer >= 0 (number of cars used)",
    "NumberOfTractorsUsed": "integer >= 0 (number of tractors used)",
    "CornTractor": "float >= 0 (corn transported by tractors in kg = 40 * NumberOfTractorsUsed)",
    "CornCar": "float >= 0 (corn transported by cars in kg = 20 * NumberOfCarsUsed)"
  },
  "objective": "Minimize total vehicles = NumberOfTractorsUsed + NumberOfCarsUsed"
}

This complete model is now ready for implementation in a coding environment.

Execution Results:
SUCCESS:
===================================
Results for Model Implementation 1:
===================================
Model Description: Linear Model using ortools.linear_solver
Solution:
  NumberOfTractorsUsed = 6.0
  NumberOfCarsUsed     = 13.0
  CornTractor         = 240.0 kg
  CornCar             = 260.0 kg
  Objective Value     = 19.0


Expected Output:
Expected solution

: {'variables': {'NumberOfCarsUsed': 13.0, 'NumberOfTractorsUsed': 6.0, 'CornTractor': 240.0, 'CornCar': 260.0}, 'objective': 19.0}
